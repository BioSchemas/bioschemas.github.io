{
    "jsonld-context": {
        "schema": "http://schema.org/",
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "rdfs": "http://www.w3.org/2000/01/rdf-schema#",
        "bioschemas": "http://discovery.biothings.io/view/bioschemas/"
    },
    "jsonld-graph": [
        {
            "jsonld-id": "bioschemas:FormalParameter",
            "jsonld-type": "rdfs:Class",
            "jsonld-validation": {
                "type": "object",
                "properties": {
                    "defaultValue": {
                        "description": "The default value for the FormalParameter. This is commonly only used for Inputs.",
                        "oneOf": [
                            {
                                "jsonld-ref": "#/definitions/thing"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "valueRequired": {
                        "description": "If the FormalParameter must be specified. This is commonly only used for Inputs",
                        "type": "boolean"
                    },
                    "encodingFormat": {
                        "description": "URLs to accepted formats.  It is strongly recommented that this be specified. If it is not specified, then nothing should be assumed about the encoding formats of the FormalParameter.",
                        "oneOf": [
                            {
                                "jsonld-ref": "#/definitions/edmoformats"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "jsonld-ref": "#/definitions/edmoformats"
                                }
                            }
                        ]
                    },
                    "additionalType": {
                        "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                        "oneOf": [
                            {
                                "type": "string",
                                "format": "uri"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        ]
                    },
                    "name": {
                        "description": "The name of the item.",
                        "type": "string"
                    },
                    "identifier": {
                        "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details.",
                        "anyOf": [
                            {
                                "jsonld-ref": "#/definitions/propertyValue"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "jsonld-ref": "#/definitions/propertyValue"
                                }
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "string",
                                "format": "uri"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        ]
                    },
                    "description": {
                        "description": "A description of the item.",
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ],
                "recommended": [
                    "additionalType",
                    "description",
                    "encodingFormat"
                ],
                "optional": [
                    "defaultValue",
                    "identifier",
                    "valueRequired"
                ],
                "definitions": {
                    "thing": {
                        "description": "The most generic type of item.",
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "The name of the item.",
                                "type": "string"
                            },
                            "identifier": {
                                "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                                "type": "string"
                            },
                            "url": {
                                "description": "URL of the item.",
                                "type": "string",
                                "format": "uri"
                            },
                            "additionalType": {
                                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                                "type": "string",
                                "format": "uri"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "jsonld-type": "Thing"
                    },
                    "edmoformats": {
                        "type": "string",
                        "vocabulary": {
                            "ontology": [
                                "edmo_format"
                            ],
                            "children_of": [
                                "http://edamontology.org/format_1915"
                            ]
                        },
                        "strict": false,
                        "jsonld-type": "DefinedTerm"
                    },
                    "propertyValue": {
                        "description": "A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.",
                        "type": "object",
                        "properties": {
                            "name": {
                                "description": "The name of the item.",
                                "type": "string"
                            },
                            "identifier": {
                                "description": "The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See background notes for more details.",
                                "type": "string"
                            },
                            "url": {
                                "description": "URL of the item.",
                                "type": "string",
                                "format": "uri"
                            },
                            "additionalType": {
                                "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                                "type": "string",
                                "format": "uri"
                            },
                            "propertyID": {
                                "type": "string"
                            }
                        },
                        "required": [],
                        "jsonld-type": "PropertyValue"
                    }
                },
                "jsonld-schema": "http://json-schema.org/draft-07/schema#"
            },
            "rdfs-comment": "Bioschemas specification for describing a formal parameter in the Life Sciences. Version: 1.0-RELEASE (09 March 2021) ",
            "rdfs-label": "FormalParameter",
            "rdfs-subClassOf": {
                "jsonld-id": "schema:Intangible"
            }
        },
        {
            "schema:domainIncludes": {
                "jsonld-id": "bioschemas:FormalParameter"
            },
            "schema:rangeIncludes": [
                {
                    "jsonld-id": "schema:Text"
                },
                {
                    "jsonld-id": "schema:Thing"
                }
            ],
            "jsonld-id": "bioschemas:defaultValue",
            "jsonld-type": "rdf:Property",
            "rdfs-comment": "The default value for the FormalParameter. This is commonly only used for Inputs.",
            "rdfs-label": "defaultValue"
        },
        {
            "schema:domainIncludes": {
                "jsonld-id": "bioschemas:FormalParameter"
            },
            "schema:rangeIncludes": [
                {
                    "jsonld-id": "schema:Boolean"
                }
            ],
            "jsonld-id": "bioschemas:valueRequired",
            "jsonld-type": "rdf:Property",
            "rdfs-comment": "If the FormalParameter must be specified. This is commonly only used for Inputs",
            "rdfs-label": "valueRequired"
        },
        {
            "schema:domainIncludes": {
                "jsonld-id": "bioschemas:FormalParameter"
            },
            "schema:rangeIncludes": [
                {
                    "jsonld-id": "schema:Text"
                },
                {
                    "jsonld-id": "schema:URL"
                }
            ],
            "jsonld-id": "bioschemas:encodingFormat",
            "jsonld-type": "rdf:Property",
            "rdfs-comment": "URLs to accepted formats.  It is strongly recommented that this be specified. If it is not specified, then nothing should be assumed about the encoding formats of the FormalParameter. Recommended ontology: http://edamontology.org/format_1915",
            "rdfs-label": "encodingFormat"
        }
    ]
}